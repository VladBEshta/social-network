{"version":3,"sources":["components/Footer/Footer.jsx","components/NavBar/NavBar.jsx","redux/state/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Formik/TextError.js","components/Formik/Input.js","components/Formik/Textarea.js","components/Formik/Checkbox.js","components/Formik/FormikControl.js","components/Dialogs/Dialogs.jsx","assets/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","assets/img/userPhoto.png","API/API.js","components/Users/Paginator.jsx","components/Users/Users.jsx","redux/state/users-reducer.js","components/Users/UsersContainer.jsx","redux/state/profile-reducer.js","components/Profile/NewPost/NewPost.jsx","components/Profile/NewPost/NewPostContainer.jsx","components/Profile/Post/Post.jsx","components/Profile/Post/PostContainer.jsx","components/Profile/ProfileInfo.jsx","components/Profile/ProfileStatusWihHook.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/state/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/state/app-reducer.js","redux/state/redux-store.js","App.js","index.js","components/Users/Users.module.css","components/Profile/Post/Profile.module.css"],"names":["Footer","className","NavBar","to","activeClassName","initialState","dialogs","id","name","messages","message","dialogsReducer","state","action","type","newMessage","DialogItem","props","Message","TextError","children","Input","label","rest","htmlFor","component","Textarea","as","Checkbox","FormikControl","control","Dialogs","validationSchema","Yup","DialogItemElement","map","d","MessageItemElement","m","initialValues","onSubmit","values","onSubmitProps","sendMessageAction","resetForm","formik","mapStateToPropsRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","dialogPage","newMessageText","dispatch","instanceAxios","axios","create","withCredentials","baseURL","headers","updateUserStatus","status","put","then","response","data","login","email","password","rememberMe","captcha","post","savePhoto","photo","formData","FormData","append","Paginator","totalItemsCount","pageSize","currentPage","onPageChange","portionSize","pagesCount","Math","ceil","pages","u","push","portionCount","useState","portionNumber","setPortion","leftPortionPage","rightPortionPage","styles","paginator","onClick","filter","p","cn","selectedPage","pageNumber","e","Users","users","user","imgSize","src","photos","small","userAva","alt","disabled","inProgress","some","userId","useId","toggleProgress","followed","delete","resultCode","follow","totalCount","isFetching","toggleFetching","usersReducer","UsersContainer","onCurrentChange","getUsersThunk","undefined","toggleFollow","usersPage","changePage","get","getUsers","items","posts","likes","profile","setUserStatus","profileReducer","newPostText","NewPost","console","log","addPostAction","NewPostContainer","newPost","profilePage","Post","PostContainer","ProfileInfo","large","userPhoto","isOwner","onChange","ava","target","files","length","saveAva","fullName","ProfileStatusWithHook","statusEditing","setStatusEditing","setStatus","useEffect","toggleStatus","updateStatus","autoFocus","onBlur","style","statusContainer","value","currentTarget","onDoubleClick","Profile","store","ProfileContainer","match","params","loggedUserId","getProfileDataThunk","getProfileStatusThunk","updateProfile","prevProps","prevState","snapshot","getProfile","getUserStatus","a","result–°ode","withRouter","Header","logoutTC","captchaUrl","getAuthMeThunk","setAuthData","getCaptcha","url","setCaptchaUrl","authReducer","HeaderContainer","serverError","loginTC","required","initialized","setInitialSuccess","appReducer","reducers","combineReducers","app","createStore","applyMiddleware","thunkMiddleware","window","App","initializeApp","path","render","DialogsContainer","AppContainer","promise","Promise","all","MainApp","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3a0ed053.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <div className=\"footer\"></div>\r\n}\r\nexport default Footer","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    return <div className=\"nav\">\r\n        <NavLink to='/profile' activeClassName = \"activeNav\">Profile</NavLink>\r\n        <NavLink to='/dialogs' activeClassName = \"activeNav\">Dialogs</NavLink>\r\n        <NavLink to='/news' activeClassName = \"activeNav\">News</NavLink>\r\n        <NavLink to='/users' activeClassName = \"activeNav\">Users</NavLink>\r\n        <NavLink to='/music' activeClassName = \"activeNav\">Music</NavLink>\r\n        <NavLink to='/settings' activeClassName = \"activeNav\">Settings</NavLink>\r\n    </div>\r\n}\r\nexport default NavBar","let initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vladek'},\r\n        {id: 2, name: 'Vadik'},\r\n        {id: 3, name: 'Madik'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'hi'},\r\n        {id: 2, message: 'bi'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\":\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages,{id: 5, message: action.newMessage}],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessageAction = (newMessage) => ({type: \"SEND-MESSAGE\", newMessage})\r\nexport default dialogsReducer","import React from 'react';\r\nimport './../../../App.css'\r\n\r\nconst DialogItem = (props) => {\r\n    return <div>\r\n        <div >{props.name}</div>\r\n    </div>\r\n}\r\nexport default DialogItem","import React from 'react';\r\nimport './../../../App.css'\r\n\r\nconst Message = (props) => {\r\n    return <div>{props.message}</div>\r\n}\r\nexport default Message","import React from \"react\"\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react'\r\nimport {ErrorMessage, Field} from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Input = (props) => {\r\n    const {label, name, ...rest} = props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport {ErrorMessage, Field} from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n    const {label, name, ...rest} = props\r\n    return(\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='textarea' type={name} id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Textarea","import React from 'react'\r\nimport {ErrorMessage, Field} from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Checkbox = (props) => {\r\n    const {label, name, ...rest} = props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field type={name} id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nconst FormikControl = (props) => {\r\n    const {control, ...rest} = props\r\n    switch (control) {\r\n        case 'input':\r\n            return <Input {...rest}/>\r\n        case 'textarea':\r\n            return <Textarea {...rest}/>\r\n        case 'checkbox':\r\n            return <Checkbox {...rest}/>\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nexport default FormikControl","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport * as Yup from 'yup'\r\nimport {Formik, Form} from \"formik\";\r\nimport FormikControl from \"../Formik/FormikControl\";\r\n\r\nconst Dialogs = (props) => {\r\n    const initialValues = {\r\n        newMessage: '',\r\n    }\r\n    const validationSchema = Yup.object({})\r\n    const onSubmit = (values, onSubmitProps) => {\r\n        props.sendMessageAction(values.newMessage)\r\n        onSubmitProps.resetForm()\r\n    }\r\n\r\n    let DialogItemElement = props.dialogs.map((d) => <DialogItem name={d.name} id={d.id}/>)\r\n    let MessageItemElement = props.messages.map((m) => <Message id={m.id} message={m.message}/>)\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogItems\">\r\n                {DialogItemElement}\r\n            </div>\r\n            <div className=\"message\">\r\n                <div>{MessageItemElement}</div>\r\n                <div>\r\n                    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                        {formik => (\r\n                            <Form>\r\n                                <FormikControl\r\n                                    control='textarea'\r\n                                    name='newMessage'\r\n                                />\r\n                                <button type='submit'>Send message</button>\r\n                            </Form>)}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent)\r\n}","import {sendMessageAction} from \"../../redux/state/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../assets/hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogPage.messages,\r\n        newMessageText: state.dialogPage.newMessageText,\r\n        dialogs: state.dialogPage.dialogs,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageAction: (newMessage) => {\r\n            dispatch(sendMessageAction(newMessage))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/userPhoto.22c31152.png\";","import axios from \"axios\";\r\n\r\nconst instanceAxios = axios.create({\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {\r\n            'API-KEY': '460e160f-8602-44bf-be3b-c0e6c732b3ac'\r\n        }\r\n    },\r\n)\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return instanceAxios.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n}\r\nexport const getProfile = (userId) => {\r\n    return instanceAxios.get(`profile/` + userId,)\r\n        .then(response => response.data);\r\n}\r\nexport const deleteFollow = (useId) => {\r\n    return instanceAxios.delete(`follow/${useId}`).then(response => response.data)\r\n};\r\nexport const postFollow = (userId) => {\r\n    return instanceAxios.post(`follow/${userId}`).then(response => response.data)\r\n}\r\nexport const getAuthMe = () => {\r\n    return instanceAxios.get('auth/me').then(response => response.data)\r\n}\r\nexport const getUserStatus = (userId) => {\r\n    return instanceAxios.get(`profile/status/${userId}`).then(response => response.data)\r\n}\r\nexport const updateUserStatus = (status) => {\r\n    return instanceAxios.put('profile/status', {status}).then(response => response.data)\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => {\r\n    return instanceAxios.post(`auth/login`, {email, password, rememberMe, captcha}).then(response => (response.data))\r\n}\r\nexport const logout = () => {\r\n    return instanceAxios.delete(`auth/login`).then(response => response.data)\r\n}\r\nexport const savePhoto = (photo) => {\r\n    const formData = new FormData()\r\n    formData.append('image', photo)\r\n    return instanceAxios.put(`profile/photo`, formData).then(response => response.data)\r\n}\r\nexport const apiGetCaptcha = () => instanceAxios.get(`security/get-captcha-url`)\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport styles from \"./Users.module.css\"\r\nimport cn from \"classnames\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChange, portionSize = 10}) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let u = 1; u <= pagesCount; u++) {\r\n        pages.push(u)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortion] = useState(1)\r\n    const leftPortionPage = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPage = portionNumber * portionSize\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortion(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPage && p <= rightPortionPage)\r\n            .map(p => <span className={cn({\r\n                [styles.selectedPage]: currentPage === p\r\n            }, styles.pageNumber)}\r\n                            key={p}\r\n                            onClick={e => onPageChange(p)}>{p}</span>)}\r\n\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortion(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport styles from \"./Users.module.css\"\r\nimport userAva from \"../../assets/img/userPhoto.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {deleteFollow, postFollow} from \"../../API/API\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nconst Users = ({currentPage,onPageChange, pageSize, totalItemsCount, ...props}) => {\r\n    // let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n    // let pagesCountArray = []\r\n    // for (let u = 1; u <= pagesCount; u++) {\r\n    //     pagesCountArray.push(u)\r\n    // }\r\n    return <div>\r\n        {/*<div className={styles.pageLinks}>{pagesCountArray.map(p => <span*/}\r\n        {/*    className={p === props.currentPage ? styles.selected : undefined}*/}\r\n        {/*    onClick={() => {*/}\r\n        {/*        props.onCurrentChange(p)*/}\r\n        {/*    }}>{p}</span>)}*/}\r\n        {/*</div>*/}\r\n        <Paginator currentPage={currentPage} onPageChange={onPageChange}\r\n                   pageSize={pageSize} totalItemsCount={totalItemsCount}/>\r\n        {props.users.map(user => <div>\r\n            <div key={user.id}>name:{user.name} userId:{user.id} </div>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img className={styles.imgSize} src={user.photos.small != null ? user.photos.small : userAva}\r\n                         alt=''/>\r\n                </NavLink>\r\n\r\n            </div>\r\n            <button\r\n                disabled={props.inProgress.some(id => id === user.id)}\r\n                onClick={() => {\r\n                    props.toggleProgress(true, user.id)\r\n                    if (user.followed) {\r\n                        deleteFollow(user.id).then(data => {\r\n                            if (data.resultCode === 0) {\r\n                                props.follow(user.id)\r\n                                props.toggleProgress(false, user.id)\r\n                            }\r\n                        });\r\n                    } else postFollow(user.id).then(data => {\r\n                        if (data.resultCode === 0) {\r\n                            props.follow(user.id)\r\n                            props.toggleProgress(false, user.id)\r\n                        }\r\n                    });\r\n                }}>{user.followed ? 'unfollow' : 'follow'}\r\n            </button>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport default Users","import {getUsers} from \"../../API/API\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 10,\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    isFetching: false,\r\n    inProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"TOGGLE-FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: !user.followed}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case \"SET-USERS\": {\r\n            return {...state, users: action.users}\r\n        }\r\n        case \"CHANGE-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-PAGES\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"TOGGLE-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"TOGGLE-IN-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                inProgress: action.isFetching\r\n                    ? [...state.inProgress, action.userId]\r\n                    : state.inProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const toggleFollow = (userId) => ({type: 'TOGGLE-FOLLOW', userId})\r\nexport const setUsers = (users) => ({type: 'SET-USERS', users})\r\nexport const changePage = (currentPage) => ({type: \"CHANGE-CURRENT-PAGE\", currentPage})\r\nexport const setTotalCount = (totalCount) => ({type: \"SET-TOTAL-PAGES\", totalCount})\r\nexport const toggleFetching = (isFetching) => ({type: 'TOGGLE-FETCHING', isFetching})\r\nexport const toggleProgress = (isFetching, userId) => ({type: 'TOGGLE-IN-PROGRESS', isFetching, userId})\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFetching(true))\r\n        dispatch(changePage(currentPage))\r\n        getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalCount(data.totalCount))\r\n                dispatch(toggleFetching(false))\r\n            })\r\n    }\r\n}\r\nexport default usersReducer","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    getUsersThunk,\r\n    toggleFetching,\r\n    toggleFollow,\r\n    toggleProgress\r\n} from \"../../redux/state/users-reducer\";\r\nimport {withAuthRedirect} from \"../../assets/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onCurrentChange = (p) => {\r\n        this.props.getUsersThunk(p, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.isFetching ? <span>Is loading....</span> : undefined}\r\n            <Users totalItemsCount={this.props.totalCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   follow={this.props.toggleFollow}\r\n                   users={this.props.users}\r\n                   onPageChange={this.onCurrentChange}\r\n                   isFetching={this.isFetching}\r\n                   inProgress={this.props.inProgress}\r\n                   toggleProgress={this.props.toggleProgress}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        inProgress: state.usersPage.inProgress,\r\n        toggleProgress: state.usersPage.toggleProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        toggleFollow,\r\n        toggleFetching,\r\n        toggleProgress,\r\n        getUsersThunk\r\n    }),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n\r\n","import {getProfile, getUserStatus, savePhoto, updateUserStatus,} from \"../../API/API\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, post: 'HII', likes: 25},\r\n        {id: 2, post: 'Byyy', likes: 0}\r\n    ],\r\n    profile: null,\r\n    status: \"My status from global state\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 3, post: action.newPostText, likes: 0}],\r\n            }\r\n        case 'SET-USER-PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SET-USER-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case 'SAVE-PHOTO-SUCCESS': {\r\n            return {\r\n                ...state,\r\n                profile: {photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostAction = (newPostText) => ({type: \"ADD-POST\", newPostText})\r\nexport const setUserProfile = (profile) => ({type: 'SET-USER-PROFILE', profile})\r\nexport const setUserStatus = (status) => ({type: 'SET-USER-STATUS', status})\r\nexport const savePhotoSuccess = (photos) => ({type: 'SAVE-PHOTO-SUCCESS', photos})\r\n\r\nexport default profileReducer\r\nexport const getProfileDataThunk = (userId) => {\r\n    return (dispatch) => {\r\n        getProfile(userId).then(data => dispatch(setUserProfile(data)))\r\n    }\r\n}\r\nexport const getProfileStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        getUserStatus(userId).then(data => dispatch(setUserStatus(data)))\r\n    }\r\n}\r\nexport const updateProfileStatusThunk = status => async dispatch => {\r\n    const data = await updateUserStatus(status)\r\n\r\n    if (data.result–°ode === 0) {\r\n        dispatch(setUserStatus(status))\r\n    }\r\n}\r\nexport const saveAva = photo => async dispatch => {\r\n    const data = await savePhoto(photo)\r\n    if (data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(data.data.photos))\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport './../../../App.css'\r\nimport {Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../../Formik/FormikControl\";\r\n\r\nconst NewPost = (props) => {\r\n    const initialValues = {\r\n        newPostText: ''\r\n    }\r\n    const onSubmit = (values, onSubmitProps) => {\r\n        console.log(values)\r\n        props.addPostAction(values.newPostText)\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const validationSchema = Yup.object({})\r\n\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        {formik =>\r\n            (<Form>\r\n                <FormikControl\r\n                    control='textarea'\r\n                    name='newPostText'\r\n                />\r\n                <button type='submit'>Create post</button>\r\n            </Form>)}\r\n    </Formik>)\r\n}\r\n\r\nexport default NewPost","import './../../../App.css'\r\nimport {addPostAction} from \"../../../redux/state/profile-reducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPost: state.profilePage.newPost\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPostAction : (newPostText) =>{\r\n            dispatch(addPostAction(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost)\r\n\r\nexport default NewPostContainer","import React from \"react\";\r\nconst Post = (props) => {\r\n    return <div> {props.post.map((m) => <div>Body: {m.post} Likes: {m.likes}</div>)}</div>\r\n}\r\n\r\nexport default Post","import Post from \"./Post\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post : state.profilePage.posts\r\n    }\r\n}\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst PostContainer = connect( mapStateToProps, mapDispatchToProps )(Post)\r\n\r\nexport default PostContainer","import React from 'react';\r\nimport userPhoto from '../../../src/assets/img/userPhoto.png'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>isLoading...</div>\r\n    }\r\n    const avaSelected = (e) => {\r\n        const ava = e.target.files\r\n        if (ava.length) {\r\n            props.saveAva(ava[0])\r\n        }\r\n    }\r\n    return <div>\r\n        <span>\r\n            <img alt='profileAva'\r\n                 src={props.profile.photos.large != null\r\n                     ? props.profile.photos.large\r\n                     : userPhoto}/>\r\n        </span>\r\n        <div>\r\n            {props.isOwner && <input onChange={avaSelected} type=\"file\"/>}\r\n        </div>\r\n\r\n        <div>name: {props.profile.fullName}</div>\r\n    </div>\r\n}\r\nexport default ProfileInfo","import React, {useEffect, useState} from \"react\";\r\nimport style from './Post/Profile.module.css'\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n    const [statusEditing, setStatusEditing] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const toggleStatus = () => {\r\n        setStatusEditing(!statusEditing)\r\n        if (status) {\r\n            props.updateStatus(status)\r\n        }\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    if (!statusEditing) return <div\r\n        className={style.statusContainer}\r\n        onDoubleClick={toggleStatus}>\r\n        {status || \"Status is empty\"}</div>\r\n    else return <input autoFocus={true}\r\n                       onBlur={toggleStatus}\r\n                       className={style.statusContainer}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                       type=\"text\"/>\r\n}\r\n\r\nexport default ProfileStatusWithHook","import React from 'react';\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport PostContainer from \"./Post/PostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n\r\nimport ProfileStatusWithHook from \"./ProfileStatusWihHook\";\r\n\r\nconst Profile = (props) => {\r\n    return <div className=\"profile\">\r\n        <ProfileInfo saveAva={props.saveAva}\r\n                     isOwner={props.isOwner}\r\n                     profile={props.profile}/>\r\n        <ProfileStatusWithHook status={props.status}\r\n                               updateStatus={props.updateStatus}/>\r\n        <NewPostContainer store={props.store}/>\r\n        <PostContainer store={props.store}/>\r\n    </div>\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getProfileDataThunk,\r\n    getProfileStatusThunk,\r\n    saveAva,\r\n    updateProfileStatusThunk\r\n} from \"../../redux/state/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../assets/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    updateProfile () {\r\n        let userId = this.props.match.params.userId\r\n        if (userId === undefined) {\r\n            userId = this.props.loggedUserId\r\n        }\r\n        this.props.getProfileDataThunk(userId)\r\n        this.props.getProfileStatusThunk(userId)\r\n    }\r\n    componentDidMount() {\r\n        this.updateProfile()\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\r\n        this.updateProfile()\r\n    }\r\n    render() {\r\n        return <Profile {...this.props}\r\n                        isOwner = {!this.props.match.params.userId}\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        saveAva = {this.props.saveAva}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        loggedUserId: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfileDataThunk,\r\n        getProfileStatusThunk,\r\n        saveAva,\r\n        updateStatus: updateProfileStatusThunk\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport '../../App.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <div className=\"header\">\r\n        <div className=\"login\">\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logoutTC}>Logout</button></div>\r\n                : <NavLink to='/login'>Login</NavLink>}</div>\r\n    </div>\r\n}\r\nexport default Header","import {apiGetCaptcha, getAuthMe, login, logout} from \"../../API/API\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET-AUTH-DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        case \"SET-CAPTCHA-URL\":\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const getAuthMeThunk = () => async (dispatch) => {\r\n    const data = await getAuthMe()\r\n\r\n    if (data.resultCode === 0) {\r\n        let {id, login, email} = data.data\r\n        dispatch(setAuthData(id, login, email, true))\r\n    }\r\n\r\n}\r\nexport const loginTC = (email, password, rememberMe, captchaUrl) => async (dispatch) => {\r\n    const data = await login(email, password, rememberMe, captchaUrl)\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthMeThunk())\r\n    } else if(data.resultCode === 10) {\r\n        dispatch(getCaptcha())\r\n    }\r\n}\r\nexport const logoutTC = () => async (dispatch) => {\r\n    const data = await logout()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    const response =  await apiGetCaptcha()\r\n    const captchaUrl = response.data.url\r\n    dispatch(setCaptchaUrl(captchaUrl))\r\n}\r\nexport const setAuthData = (id, login, email, isAuth) => ({type: 'SET-AUTH-DATA', data: {id, login, email, isAuth}})\r\nexport const setCaptchaUrl = (captchaUrl) => ({type: 'SET-CAPTCHA-URL', data: {captchaUrl}})\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTC} from \"../../redux/state/auth-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {logoutTC})(withRouter(HeaderContainer))","import React from \"react\";\r\nimport {Form, Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../Formik/FormikControl\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/state/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        serverError: state.auth.serverError,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        captcha: ''\r\n    }\r\n    const onSubmit = values => {\r\n        props.loginTC(values.email, values.password, values.rememberMe, values.captcha)\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().required('Required').email('Incorrect email format'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    if (props.isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <Formik initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={onSubmit}>\r\n                {formik => (\r\n                    <Form>\r\n                        <FormikControl\r\n                            control='input'\r\n                            type='name'\r\n                            label='Email'\r\n                            name='email'/>\r\n                        <FormikControl\r\n                            control='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            name='password'/>\r\n                        <FormikControl\r\n                            control='checkbox'\r\n                            type='checkbox'\r\n                            label='Remember me'\r\n                            name='rememberMe'/>\r\n                        {props.captchaUrl && <img src={props.captchaUrl} alt=\"captcha\"/>}\r\n                        {props.captchaUrl && <FormikControl\r\n                            control='input'\r\n                            type='captcha'\r\n                            label='Pls enter captcha from image'\r\n                            name='captcha'/>}\r\n                        <button type='submit'>Login</button>\r\n                    </Form>)}\r\n            </Formik>\r\n        </div>)\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(Login)","import {} from \"../../API/API\";\r\nimport {getAuthMeThunk} from \"./auth-reducer\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZE\":\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthMeThunk())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitialSuccess())\r\n        })\r\n}\r\n\r\nexport const setInitialSuccess = () => ({type: 'SET-INITIALIZE'})\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from \"react\"\nimport './App.css'\nimport Footer from \"./components/Footer/Footer\"\nimport NavBar from \"./components/NavBar/NavBar\"\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from './components/Login/Login'\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/state/app-reducer\";\nimport {compose} from \"redux\";\nimport store from \"./redux/state/redux-store\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) return '...loading'\n        return (\n            <div className=\"wrapper\">\n                <HeaderContainer/>\n                <NavBar/>\n\n                    <Route path='/profile/:userId?'\n                           render={() =>\n                               <ProfileContainer/>}/>\n                    <Route path='/dialogs'\n                           render={() =>\n                               <DialogsContainer/>}/>\n                    <Route path='/users'\n                           render={() =>\n                               <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() =>\n                               <LoginPage/>}/>\n\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\nlet AppContainer = connect(mapStateToProps, {initializeApp})(withRouter(App))\n\n\nexport const MainApp = () => {\n    return <Provider store={store}>\n        <BrowserRouter>\n            <AppContainer/>\n        </BrowserRouter>\n    </Provider>\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {MainApp} from './App';\n\n\nReactDOM.render(\n    <MainApp/>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Users_selected__3EqQf\",\"isFetching\":\"Users_isFetching__18CSe\",\"pageLinks\":\"Users_pageLinks__ZfMAT\",\"imgSize\":\"Users_imgSize__1PRvR\",\"paginator\":\"Users_paginator__2icJZ\",\"pageNumber\":\"Users_pageNumber__1LdiP\",\"selectedPage\":\"Users_selectedPage__1aaL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Profile_selected__39ExA\",\"isFetching\":\"Profile_isFetching__XiAok\",\"pageLinks\":\"Profile_pageLinks__2mem9\",\"imgSize\":\"Profile_imgSize__2XOIU\",\"statusContainer\":\"Profile_statusContainer__2oZeI\"};"],"sourceRoot":""}