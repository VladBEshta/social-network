{"version":3,"sources":["API/API.js","redux/state/profile-reducer.js","redux/state/dialogs-reducer.js","redux/state/users-reducer.js","redux/state/auth-reducer.js","redux/state/app-reducer.js","redux/state/redux-store.js","components/Footer/Footer.jsx","components/NavBar/NavBar.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Formik/TextError.js","components/Formik/Input.js","components/Formik/Textarea.js","components/Formik/Checkbox.js","components/Formik/FormikControl.js","components/Dialogs/Dialogs.jsx","assets/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","assets/img/userPhoto.png","components/Users/Paginator.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","components/Profile/NewPost/NewPost.jsx","components/Profile/NewPost/NewPostContainer.jsx","components/Profile/Post/Post.jsx","components/Profile/Post/PostContainer.jsx","components/Profile/ProfileInfo.jsx","components/Profile/ProfileStatusWihHook.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","index.js","components/Users/Users.module.css","components/Profile/Post/Profile.module.css"],"names":["instanceAxios","axios","create","withCredentials","baseURL","headers","initialState","posts","id","post","likes","profile","status","setUserStatus","type","profileReducer","state","action","newPostText","dialogs","name","messages","message","dialogsReducer","newMessage","users","totalCount","currentPage","pageSize","isFetching","inProgress","toggleFetching","usersReducer","map","user","userId","followed","filter","login","email","isAuth","getAuthMeThunk","dispatch","get","then","response","data","resultCode","setAuthData","authReducer","initialized","setInitialSuccess","appReducer","reducers","combineReducers","profilePage","dialogPage","usersPage","auth","app","store","createStore","applyMiddleware","thunkMiddleware","window","Footer","className","NavBar","to","activeClassName","DialogItem","props","Message","TextError","children","Input","label","rest","htmlFor","component","Textarea","as","Checkbox","FormikControl","control","Dialogs","validationSchema","Yup","DialogItemElement","d","MessageItemElement","m","initialValues","onSubmit","values","onSubmitProps","sendMessageAction","resetForm","formik","mapStateToPropsRedirect","withAuthRedirect","Component","RedirectComponent","this","React","connect","compose","newMessageText","Paginator","totalItemsCount","onPageChange","portionSize","pagesCount","Math","ceil","pages","u","push","portionCount","useState","portionNumber","setPortion","leftPortionPage","rightPortionPage","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","Users","imgSize","src","photos","small","userAva","alt","disabled","some","useId","toggleProgress","delete","follow","UsersContainer","onCurrentChange","getUsersThunk","undefined","toggleFollow","changePage","getUsers","items","NewPost","console","log","addPostAction","NewPostContainer","newPost","Post","PostContainer","ProfileInfo","userPhoto","fullName","ProfileStatusWithHook","statusEditing","setStatusEditing","setStatus","useEffect","toggleStatus","updateStatus","autoFocus","onBlur","style","statusContainer","value","onChange","currentTarget","onDoubleClick","Profile","ProfileContainer","match","params","loggedUserId","getProfileDataThunk","getProfileStatusThunk","getProfile","getUserStatus","put","updateUserStatus","result–°ode","withRouter","Header","logoutTC","HeaderContainer","serverError","loginTC","password","rememberMe","alert","required","App","initializeApp","path","render","DialogsContainer","promise","Promise","all","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ff5f1947.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instanceAxios = axios.create({\r\n        withCredentials: true,\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        headers: {\r\n            'API-KEY': '460e160f-8602-44bf-be3b-c0e6c732b3ac'\r\n        }\r\n    },\r\n)\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return instanceAxios.get(`users?page=${currentPage}&count=${pageSize}`)\r\n        .then(response => response.data)\r\n}\r\nexport const getProfile = (userId) => {\r\n    return instanceAxios.get(`profile/` + userId,)\r\n        .then(response => response.data);\r\n}\r\nexport const deleteFollow = (useId) => {\r\n    return instanceAxios.delete(`follow/${useId}`).then(response => response.data)\r\n};\r\nexport const postFollow = (userId) => {\r\n    return instanceAxios.post(`follow/${userId}`).then(response => response.data)\r\n}\r\nexport const getAuthMe = () => {\r\n    return instanceAxios.get('auth/me').then(response => response.data)\r\n}\r\nexport const getUserStatus = (userId) => {\r\n    return instanceAxios.get(`profile/status/${userId}`).then(response => response.data)\r\n}\r\nexport const updateUserStatus = (status) => {\r\n    return instanceAxios.put ('profile/status', {status}).then(response => response.data)\r\n}\r\nexport const login = (email, password, rememberMe) => {\r\n    return instanceAxios.post (`auth/login`, {email, password, rememberMe}).then(response => (response.data))\r\n}\r\nexport const logout = () => {\r\n    return instanceAxios.delete (`auth/login`).then(response => response.data)\r\n}\r\n\r\n","import {getProfile, getUserStatus, updateUserStatus,} from \"../../API/API\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, post: 'HII', likes: 25},\r\n        {id: 2, post: 'Byyy', likes: 0}\r\n    ],\r\n    profile: null,\r\n    status: \"My status from global state\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 3, post: action.newPostText, likes: 0}],\r\n            }\r\n        case 'SET-USER-PROFILE': {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case 'SET-USER-STATUS': {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addPostAction = (newPostText) => ({type: \"ADD-POST\", newPostText})\r\nexport const setUserProfile = (profile) => ({type: 'SET-USER-PROFILE', profile})\r\nexport const setUserStatus = (status) => ({type: 'SET-USER-STATUS', status})\r\nexport default profileReducer\r\nexport const getProfileDataThunk = (userId) => {\r\n    return (dispatch) => {\r\n        getProfile(userId).then(data => dispatch(setUserProfile(data)))\r\n    }\r\n}\r\nexport const getProfileStatusThunk = (userId) => {\r\n    return (dispatch) => {\r\n        getUserStatus(userId).then(data => dispatch(setUserStatus(data)))\r\n    }\r\n}\r\nexport const updateProfileStatusThunk = (status) => {\r\n    return (dispatch) => {\r\n        updateUserStatus(status).then(data => {\r\n                if (data.result–°ode === 0) dispatch(setUserStatus(status))\r\n            }\r\n        )\r\n    }\r\n}\r\n","let initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Vladek'},\r\n        {id: 2, name: 'Vadik'},\r\n        {id: 3, name: 'Madik'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'hi'},\r\n        {id: 2, message: 'bi'}\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SEND-MESSAGE\":\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages,{id: 5, message: action.newMessage}],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const sendMessageAction = (newMessage) => ({type: \"SEND-MESSAGE\", newMessage})\r\nexport default dialogsReducer","import {getUsers} from \"../../API/API\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 10,\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    isFetching: false,\r\n    inProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"TOGGLE-FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: !user.followed}\r\n                    }\r\n                    return user\r\n                })\r\n            }\r\n        case \"SET-USERS\": {\r\n            return {...state, users: action.users}\r\n        }\r\n        case \"CHANGE-CURRENT-PAGE\":\r\n            return {...state, currentPage: action.currentPage}\r\n        case \"SET-TOTAL-PAGES\":\r\n            return {...state, totalCount: action.totalCount}\r\n        case \"TOGGLE-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"TOGGLE-IN-PROGRESS\":\r\n            return {\r\n                ...state,\r\n                inProgress: action.isFetching\r\n                    ? [...state.inProgress, action.userId]\r\n                    : state.inProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const toggleFollow = (userId) => ({type: 'TOGGLE-FOLLOW', userId})\r\nexport const setUsers = (users) => ({type: 'SET-USERS', users})\r\nexport const changePage = (currentPage) => ({type: \"CHANGE-CURRENT-PAGE\", currentPage})\r\nexport const setTotalCount = (totalCount) => ({type: \"SET-TOTAL-PAGES\", totalCount})\r\nexport const toggleFetching = (isFetching) => ({type: 'TOGGLE-FETCHING', isFetching})\r\nexport const toggleProgress = (isFetching, userId) => ({type: 'TOGGLE-IN-PROGRESS', isFetching, userId})\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFetching(true))\r\n        dispatch(changePage(currentPage))\r\n        getUsers(currentPage, pageSize)\r\n            .then(data => {\r\n                dispatch(setUsers(data.items))\r\n                dispatch(setTotalCount(data.totalCount))\r\n                dispatch(toggleFetching(false))\r\n            })\r\n    }\r\n}\r\nexport default usersReducer","import {getAuthMe, login, logout} from \"../../API/API\";\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET-AUTH-DATA\":\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const getAuthMeThunk = () => (dispatch) => {\r\n    return getAuthMe()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, login, email} = data.data\r\n                dispatch(setAuthData(id, login, email, true))\r\n            }\r\n        })\r\n}\r\nexport const loginTC = (email, password, rememberMe) => (dispatch) => {\r\n    login(email, password, rememberMe)\r\n        .then(data =>  {\r\n            if (data.resultCode === 0) {\r\n                console.log(data)\r\n                dispatch(getAuthMeThunk())\r\n            }else {\r\n                alert(data.messages[0])\r\n            }\r\n        })\r\n}\r\nexport const logoutTC = () => {\r\n    return (dispatch) => {\r\n        logout().then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(setAuthData(null, null, null, false))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const setAuthData = (id, login, email, isAuth) => ({type: 'SET-AUTH-DATA', data: {id, login, email, isAuth}})\r\nexport default authReducer;","import {} from \"../../API/API\";\r\nimport {getAuthMeThunk} from \"./auth-reducer\";\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET-INITIALIZE\":\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthMeThunk())\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(setInitialSuccess())\r\n        })\r\n}\r\n\r\nexport const setInitialSuccess = () => ({type: 'SET-INITIALIZE'})\r\nexport default appReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return <div className=\"footer\"></div>\r\n}\r\nexport default Footer","import React from 'react';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst NavBar = () => {\r\n    return <div className=\"nav\">\r\n        <NavLink to='/profile' activeClassName = \"activeNav\">Profile</NavLink>\r\n        <NavLink to='/dialogs' activeClassName = \"activeNav\">Dialogs</NavLink>\r\n        <NavLink to='/news' activeClassName = \"activeNav\">News</NavLink>\r\n        <NavLink to='/users' activeClassName = \"activeNav\">Users</NavLink>\r\n        <NavLink to='/music' activeClassName = \"activeNav\">Music</NavLink>\r\n        <NavLink to='/settings' activeClassName = \"activeNav\">Settings</NavLink>\r\n    </div>\r\n}\r\nexport default NavBar","import React from 'react';\r\nimport './../../../App.css'\r\n\r\nconst DialogItem = (props) => {\r\n    return <div>\r\n        <div >{props.name}</div>\r\n    </div>\r\n}\r\nexport default DialogItem","import React from 'react';\r\nimport './../../../App.css'\r\n\r\nconst Message = (props) => {\r\n    return <div>{props.message}</div>\r\n}\r\nexport default Message","import React from \"react\"\r\n\r\nconst TextError = (props) => {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextError","import React from 'react'\r\nimport {ErrorMessage, Field} from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Input = (props) => {\r\n    const {label, name, ...rest} = props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport {ErrorMessage, Field} from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Textarea = (props) => {\r\n    const {label, name, ...rest} = props\r\n    return(\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field as='textarea' type={name} id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Textarea","import React from 'react'\r\nimport {ErrorMessage, Field} from \"formik\";\r\nimport TextError from \"./TextError\";\r\n\r\nconst Checkbox = (props) => {\r\n    const {label, name, ...rest} = props\r\n    return (\r\n        <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <Field type={name} id={name} name={name} {...rest}/>\r\n            <ErrorMessage name={name} component={TextError}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkbox","import React from 'react'\r\nimport Input from \"./Input\";\r\nimport Textarea from \"./Textarea\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nconst FormikControl = (props) => {\r\n    const {control, ...rest} = props\r\n    switch (control) {\r\n        case 'input':\r\n            return <Input {...rest}/>\r\n        case 'textarea':\r\n            return <Textarea {...rest}/>\r\n        case 'checkbox':\r\n            return <Checkbox {...rest}/>\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nexport default FormikControl","import React from 'react';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport * as Yup from 'yup'\r\nimport {Formik, Form} from \"formik\";\r\nimport FormikControl from \"../Formik/FormikControl\";\r\n\r\nconst Dialogs = (props) => {\r\n    const initialValues = {\r\n        newMessage: '',\r\n    }\r\n    const validationSchema = Yup.object({})\r\n    const onSubmit = (values, onSubmitProps) => {\r\n        props.sendMessageAction(values.newMessage)\r\n        onSubmitProps.resetForm()\r\n    }\r\n\r\n    let DialogItemElement = props.dialogs.map((d) => <DialogItem name={d.name} id={d.id}/>)\r\n    let MessageItemElement = props.messages.map((m) => <Message id={m.id} message={m.message}/>)\r\n\r\n    return (\r\n        <div className=\"dialogs\">\r\n            <div className=\"dialogItems\">\r\n                {DialogItemElement}\r\n            </div>\r\n            <div className=\"message\">\r\n                <div>{MessageItemElement}</div>\r\n                <div>\r\n                    <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                        {formik => (\r\n                            <Form>\r\n                                <FormikControl\r\n                                    control='textarea'\r\n                                    name='newMessage'\r\n                                />\r\n                                <button type='submit'>Send message</button>\r\n                            </Form>)}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsRedirect)(RedirectComponent)\r\n}","import {sendMessageAction} from \"../../redux/state/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../assets/hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogPage.messages,\r\n        newMessageText: state.dialogPage.newMessageText,\r\n        dialogs: state.dialogPage.dialogs,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessageAction: (newMessage) => {\r\n            dispatch(sendMessageAction(newMessage))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)","export default __webpack_public_path__ + \"static/media/userPhoto.22c31152.png\";","import React, {useState} from \"react\";\r\nimport styles from \"./Users.module.css\"\r\nimport cn from \"classnames\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChange, portionSize = 10}) => {\r\n\r\n    const pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    const pages = []\r\n    for (let u = 1; u <= pagesCount; u++) {\r\n        pages.push(u)\r\n    }\r\n\r\n    const portionCount = Math.ceil(pagesCount / portionSize)\r\n    const [portionNumber, setPortion] = useState(1)\r\n    const leftPortionPage = (portionNumber - 1) * portionSize + 1\r\n    const rightPortionPage = portionNumber * portionSize\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortion(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPage && p <= rightPortionPage)\r\n            .map(p => <span className={cn({\r\n                [styles.selectedPage]: currentPage === p\r\n            }, styles.pageNumber)}\r\n                            key={p}\r\n                            onClick={e => onPageChange(p)}>{p}</span>)}\r\n\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortion(portionNumber + 1)\r\n        }}>NEXT</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React from 'react';\r\nimport styles from \"./Users.module.css\"\r\nimport userAva from \"../../assets/img/userPhoto.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {deleteFollow, postFollow} from \"../../API/API\";\r\nimport Paginator from \"./Paginator\";\r\n\r\nconst Users = ({currentPage,onPageChange, pageSize, totalItemsCount, ...props}) => {\r\n    // let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n    // let pagesCountArray = []\r\n    // for (let u = 1; u <= pagesCount; u++) {\r\n    //     pagesCountArray.push(u)\r\n    // }\r\n    return <div>\r\n        {/*<div className={styles.pageLinks}>{pagesCountArray.map(p => <span*/}\r\n        {/*    className={p === props.currentPage ? styles.selected : undefined}*/}\r\n        {/*    onClick={() => {*/}\r\n        {/*        props.onCurrentChange(p)*/}\r\n        {/*    }}>{p}</span>)}*/}\r\n        {/*</div>*/}\r\n        <Paginator currentPage={currentPage} onPageChange={onPageChange}\r\n                   pageSize={pageSize} totalItemsCount={totalItemsCount}/>\r\n        {props.users.map(user => <div>\r\n            <div key={user.id}>name:{user.name} userId:{user.id} </div>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img className={styles.imgSize} src={user.photos.small != null ? user.photos.small : userAva}\r\n                         alt=''/>\r\n                </NavLink>\r\n\r\n            </div>\r\n            <button\r\n                disabled={props.inProgress.some(id => id === user.id)}\r\n                onClick={() => {\r\n                    props.toggleProgress(true, user.id)\r\n                    if (user.followed) {\r\n                        deleteFollow(user.id).then(data => {\r\n                            if (data.resultCode === 0) {\r\n                                props.follow(user.id)\r\n                                props.toggleProgress(false, user.id)\r\n                            }\r\n                        });\r\n                    } else postFollow(user.id).then(data => {\r\n                        if (data.resultCode === 0) {\r\n                            props.follow(user.id)\r\n                            props.toggleProgress(false, user.id)\r\n                        }\r\n                    });\r\n                }}>{user.followed ? 'unfollow' : 'follow'}\r\n            </button>\r\n        </div>)}\r\n    </div>\r\n}\r\n\r\nexport default Users","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Users from \"./Users\";\r\nimport {\r\n    getUsersThunk,\r\n    toggleFetching,\r\n    toggleFollow,\r\n    toggleProgress\r\n} from \"../../redux/state/users-reducer\";\r\nimport {withAuthRedirect} from \"../../assets/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onCurrentChange = (p) => {\r\n        this.props.getUsersThunk(p, this.props.pageSize)\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.isFetching ? <span>Is loading....</span> : undefined}\r\n            <Users totalItemsCount={this.props.totalCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   follow={this.props.toggleFollow}\r\n                   users={this.props.users}\r\n                   onPageChange={this.onCurrentChange}\r\n                   isFetching={this.isFetching}\r\n                   inProgress={this.props.inProgress}\r\n                   toggleProgress={this.props.toggleProgress}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        totalCount: state.usersPage.totalCount,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        inProgress: state.usersPage.inProgress,\r\n        toggleProgress: state.usersPage.toggleProgress\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        toggleFollow,\r\n        toggleFetching,\r\n        toggleProgress,\r\n        getUsersThunk\r\n    }),\r\n    withAuthRedirect,\r\n)(UsersContainer)\r\n\r\n\r\n","import React from \"react\";\r\nimport './../../../App.css'\r\nimport {Form, Formik} from \"formik\";\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../../Formik/FormikControl\";\r\n\r\nconst NewPost = (props) => {\r\n    const initialValues = {\r\n        newPostText: ''\r\n    }\r\n    const onSubmit = (values, onSubmitProps) => {\r\n        console.log(values)\r\n        props.addPostAction(values.newPostText)\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const validationSchema = Yup.object({})\r\n\r\n    return (<Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        {formik =>\r\n            (<Form>\r\n                <FormikControl\r\n                    control='textarea'\r\n                    name='newPostText'\r\n                />\r\n                <button type='submit'>Create post</button>\r\n            </Form>)}\r\n    </Formik>)\r\n}\r\n\r\nexport default NewPost","import './../../../App.css'\r\nimport {addPostAction} from \"../../../redux/state/profile-reducer\";\r\nimport NewPost from \"./NewPost\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newPost: state.profilePage.newPost\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPostAction : (newPostText) =>{\r\n            dispatch(addPostAction(newPostText))\r\n        },\r\n    }\r\n}\r\n\r\n\r\nconst NewPostContainer = connect(mapStateToProps, mapDispatchToProps)(NewPost)\r\n\r\nexport default NewPostContainer","import React from \"react\";\r\nconst Post = (props) => {\r\n    return <div> {props.post.map((m) => <div>Body: {m.post} Likes: {m.likes}</div>)}</div>\r\n}\r\n\r\nexport default Post","import Post from \"./Post\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        post : state.profilePage.posts\r\n    }\r\n}\r\nconst mapDispatchToProps = () => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\n\r\nconst PostContainer = connect( mapStateToProps, mapDispatchToProps )(Post)\r\n\r\nexport default PostContainer","import React from 'react';\r\nimport userPhoto from '../../../src/assets/img/userPhoto.png'\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <div>isLoading...</div>\r\n    }\r\n    return <div>\r\n        <span><img alt='profileAva' src={props.profile.photos.small!= null ? props.profile.photos.small : userPhoto }/></span>\r\n        <div>name: {props.profile.fullName}</div>\r\n    </div>\r\n}\r\nexport default ProfileInfo","import React, {useEffect, useState} from \"react\";\r\nimport style from './Post/Profile.module.css'\r\n\r\n\r\nconst ProfileStatusWithHook = (props) => {\r\n    const [statusEditing, setStatusEditing] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(()=> {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const toggleStatus = () => {\r\n        setStatusEditing(!statusEditing)\r\n        if (status) {\r\n            props.updateStatus(status)\r\n        }\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    if (!statusEditing) return <div\r\n        className={style.statusContainer}\r\n        onDoubleClick={toggleStatus}>\r\n        {status || \"Status is empty\"}</div>\r\n    else return <input autoFocus={true}\r\n                       onBlur={toggleStatus}\r\n                       className={style.statusContainer}\r\n                       value={status}\r\n                       onChange={onStatusChange}\r\n                       type=\"text\"/>\r\n}\r\n\r\nexport default ProfileStatusWithHook","import React from 'react';\r\nimport NewPostContainer from \"./NewPost/NewPostContainer\";\r\nimport PostContainer from \"./Post/PostContainer\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n// import ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHook from \"./ProfileStatusWihHook\";\r\n\r\nconst Profile = (props) => {\r\n    return <div className=\"profile\">\r\n        <ProfileInfo profile={props.profile}/>\r\n        <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>\r\n        <NewPostContainer store={props.store}/>\r\n        <PostContainer store={props.store}/>\r\n    </div>\r\n}\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getProfileDataThunk, getProfileStatusThunk, updateProfileStatusThunk} from \"../../redux/state/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../assets/hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (userId === undefined) {\r\n            userId = this.props.loggedUserId\r\n        }\r\n        this.props.getProfileDataThunk(userId)\r\n        this.props.getProfileStatusThunk(userId)\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        loggedUserId: state.auth.id\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        getProfileDataThunk,\r\n        getProfileStatusThunk,\r\n        updateStatus: updateProfileStatusThunk\r\n    }),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport '../../App.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <div className=\"header\">\r\n        <div className=\"login\">\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logoutTC}>Logout</button></div>\r\n                : <NavLink to='/login'>Login</NavLink>}</div>\r\n    </div>\r\n}\r\nexport default Header","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTC} from \"../../redux/state/auth-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {logoutTC})(withRouter(HeaderContainer))","import React from \"react\";\r\nimport {Formik, Form} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../Formik/FormikControl\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/state/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        serverError: state.auth.serverError\r\n    }\r\n}\r\n\r\nconst Login = (props) => {\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    }\r\n    const onSubmit = values => {\r\n        props.loginTC(values.email, values.password, values.rememberMe)\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().required('Required').email('Incorrect email format'),\r\n        password: Yup.string().required('Required')\r\n    })\r\n\r\n    if (props.isAuth) return <Redirect to='/profile'/>\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                {formik => (\r\n                    <Form>\r\n                        <FormikControl\r\n                            control='input'\r\n                            type='name'\r\n                            label='Email'\r\n                            name='email'/>\r\n                        <FormikControl\r\n                            control='input'\r\n                            type='password'\r\n                            label='Password'\r\n                            name='password'/>\r\n                        <FormikControl\r\n                            control='checkbox'\r\n                            type='checkbox'\r\n                            label='Remember me'\r\n                            name='rememberMe'/>\r\n                        <button type='submit'>Login</button>\r\n                    </Form>)}\r\n            </Formik>\r\n        </div>)\r\n}\r\nexport default connect(mapStateToProps, {loginTC})(Login)","import React from \"react\"\nimport './App.css'\nimport Footer from \"./components/Footer/Footer\"\nimport NavBar from \"./components/NavBar/NavBar\"\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from './components/Login/Login'\nimport {connect} from \"react-redux\";\nimport {initializeApp} from \"./redux/state/app-reducer\";\n\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if(!this.props.initialized) return '...loading'\n        else return (\n            <BrowserRouter>\n                <div className=\"wrapper\">\n                    <HeaderContainer/>\n                    <NavBar/>\n                    <Route path='/profile/:userId?'\n                           render={() =>\n                               <ProfileContainer/>}/>\n                    <Route path='/dialogs'\n                           render={() =>\n                               <DialogsContainer/>}/>\n                    <Route path='/users'\n                           render={() =>\n                               <UsersContainer/>}/>\n                    <Route path='/login'\n                           render={() =>\n                               <LoginPage/>}/>\n                    <Footer/>\n                </div>\n            </BrowserRouter>\n        )}\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        initialized: state.app.initialized\n    }\n}\nexport default connect(mapStateToProps, {initializeApp})(App);","import React from 'react';\nimport store from \"./redux/state/redux-store\"\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Users_selected__3EqQf\",\"isFetching\":\"Users_isFetching__18CSe\",\"pageLinks\":\"Users_pageLinks__ZfMAT\",\"imgSize\":\"Users_imgSize__1PRvR\",\"paginator\":\"Users_paginator__2icJZ\",\"pageNumber\":\"Users_pageNumber__1LdiP\",\"selectedPage\":\"Users_selectedPage__1aaL5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selected\":\"Profile_selected__39ExA\",\"isFetching\":\"Profile_isFetching__XiAok\",\"pageLinks\":\"Profile_pageLinks__2mem9\",\"imgSize\":\"Profile_imgSize__2XOIU\",\"statusContainer\":\"Profile_statusContainer__2oZeI\"};"],"sourceRoot":""}